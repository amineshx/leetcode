class Solution:
    def openLock(self, deadends: List[str], target: str) -> int:
        deadends = set(deadends)
        if "0000" in deadends:
            return -1

        queue = deque([("0000", 0)])
        visited = set(["0000"])

        while queue:
            node, depth = queue.popleft()
            if node == target:
                return depth

            for i in range(4):
                digit = int(node[i])
                for diff in (1, -1):
                    new_digit = (digit + diff) % 10
                    new_node = node[:i] + str(new_digit) + node[i + 1:]
                    if new_node not in visited and new_node not in deadends:
                        visited.add(new_node)
                        queue.append((new_node, depth + 1))

        return -1
