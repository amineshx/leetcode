// O(n)
// JS
/**
 * @param {number[]} nums
 * @return {number}
 */
var minDifference = function(nums) {
    if(nums.length<=4){
        return 0
    }
    nums.sort((a, b) => a - b)
    min_four = nums.slice(0, 4)
    max_four = nums.slice(-4)
    res = Infinity

    for(i=0;i<4;i++){
        res=Math.min(res,max_four[i]-min_four[i])
    }
    return res
};

//py
import heapq
class Solution:
    def minDifference(self, nums: List[int]) -> int:
        if len(nums)<=4:
            return 0
        min_four=sorted(heapq.nsmallest(4,nums))
        max_four=sorted(heapq.nlargest(4,nums))
        res = float("inf")
        for i in range(4):
            res = min(res, max_four[i]-min_four[i])
        return res



// O(nlogn)

//js
/**
 * @param {number[]} nums
 * @return {number}
 */
var minDifference = function(nums) {
    if(nums.length<=4){
        return 0
    }
    nums.sort((a, b) => a - b)
    let res = Infinity
    for(l=0 ; l<4;l++){
        r=nums.length-4 +l
        res = Math.min(res, nums[r] - nums[l])
    }
    return res
};

//py
class Solution:
    def minDifference(self, nums: List[int]) -> int:
        if len(nums)<=4:
            return 0
        nums.sort()
        res=float("inf")
        for l in range(4):
            r=len(nums)-4+l
            res = min(res, nums[r]-nums[l])
        return res
