/**
 * Definition for a binary tree node.
 * function TreeNode(val, left, right) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.left = (left===undefined ? null : left)
 *     this.right = (right===undefined ? null : right)
 * }
 */
/**
 * @param {TreeNode} root
 * @return {string}
 */
var smallestFromLeaf = function(root) {
    let smallest = '{';
    dfs(root, '');
    return smallest;
    
    function dfs(node, current) {
        if (!node) return;
        current = String.fromCharCode(node.val + 97) + current; 
        if (!node.left && !node.right) { 
            smallest = current < smallest ? current : smallest;
            return;
        }
        dfs(node.left, current);
        dfs(node.right, current);
    }
};
