class Solution:
    def minOperations(self, nums: List[int], k: int) -> int:
        ans = 0
        for bit in range(21):  # 0 to 20 inclusive
            xor_val = 0
            for el in nums:
                bit_val = (1 << bit) & el
                xor_val ^= bit_val
            k_bit_val = (1 << bit) & k
            if xor_val != k_bit_val:
                ans += 1
        return ans

#optimiesd on 

class Solution:
    def minOperations(self, nums: List[int], k: int) -> int:
        xor_sum = 0
        for num in nums:
            xor_sum ^= num

        target_xor = xor_sum ^ k

        if target_xor == 0:
            return 0

        count = 0
        while target_xor:
            if target_xor & 1: 
                count += 1
            target_xor >>= 1  

        return count
        
